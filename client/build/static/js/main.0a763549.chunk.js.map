{"version":3,"sources":["components/Register.js","components/Absentee.js","components/Vote.js","components/Steps.js","components/Header.js","components/Footer.js","components/About.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","buttons","margin","spacing","color","borderColor","icons","link","textDecoration","bold","fontWeight","Register","classes","Link","href","target","className","Button","variant","List","ListItem","ListItemIcon","ListItemText","Absentee","Vote","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","root","fontFamily","flexGrow","backgroundColor","textAlign","tabs","tab","opacity","SimpleTabs","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","aria-label","Tab","label","header","marginTop","marginBottom","paddingTop","paddingBottom","Header","footer","width","height","footerColor","Footer","BottomNavigation","showLabels","BottomNavigationAction","component","to","icon","about","fontSize","About","contact","form","dropdown","inputs","Contact","name","setName","nameErrorText","setNameErrorText","email","setEmail","emailErrorText","setEmailErrorText","reason","setReason","comments","setComments","commentsErrorText","setCommentsErrorText","noValidate","autoComplete","TextField","error","length","helperText","e","FormControl","InputLabel","Select","labelId","MenuItem","multiline","rows","onClick","preventDefault","match","axios","post","text","App","basename","exact","path","render","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"qWASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,OACPC,YAAa,QAEfC,MAAO,CACLF,MAAO,QAETG,KAAM,CACJ,UAAW,CACTC,eAAgB,SAGpBC,KAAM,CACJC,WAAY,SACZN,MAAO,YAyMIO,EArME,WACf,IAAMC,EAAUd,IAEhB,OACE,qCACE,qEACA,cAACe,EAAA,EAAD,CACEC,KAAK,wCACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,kCAQF,cAACY,EAAA,EAAD,CACEC,KAAK,yEACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,mCAQF,cAACY,EAAA,EAAD,CACEC,KAAK,yEACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,gCAQF,eAACkB,EAAA,EAAD,CAAMH,UAAU,aAAhB,UACE,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,eAACM,EAAA,EAAD,iDACsC,IACpC,sBAAMN,UAAWJ,EAAQH,KAAzB,mDAFF,sEAQF,eAACW,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,eAACM,EAAA,EAAD,gCACqB,IACnB,sBAAMN,UAAWJ,EAAQH,KAAzB,0DAFF,aASJ,eAACU,EAAA,EAAD,CAAMH,UAAU,aAAhB,UACE,cAACI,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,4CAEE,eAACH,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,oDAEF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,oDAEF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,0FAKF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,qGAKF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,8EAOR,cAACF,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,qFAGE,eAACH,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,uDAIF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,4CAEF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,2DAKR,cAACF,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,4DAEE,cAACH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,6EAOR,cAACF,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,gJAGE,eAACH,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,6CAEF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,0HAKF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,qGC5MVxB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,OACPC,YAAa,QAEfC,MAAO,CACLF,MAAO,QAETG,KAAM,CACJ,UAAW,CACTC,eAAgB,SAGpBC,KAAM,CACJC,WAAY,SACZN,MAAO,YAoIImB,EAhIE,WACf,IAAMX,EAAUd,IAEhB,OACE,qCACE,2DAC2B,sBAAMkB,UAAWJ,EAAQH,KAAzB,oBAE3B,mGACA,gGACA,mFACA,cAACI,EAAA,EAAD,CACEC,KAAK,oCACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,0CAQF,eAACkB,EAAA,EAAD,CAAMH,UAAU,aAAhB,UACE,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,eAACM,EAAA,EAAD,WACE,sBAAMN,UAAWJ,EAAQH,KAAzB,wEAEQ,IAHV,kKASF,eAACW,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,eAACM,EAAA,EAAD,WACE,sBAAMN,UAAWJ,EAAQH,KAAzB,oHAGQ,IAJV,wFASF,eAACW,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,sKAMF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,yNAOJ,cAACT,EAAA,EAAD,CACEC,KAAK,mEACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,6CAQF,cAACY,EAAA,EAAD,CACEC,KAAK,6DACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,uDAQF,cAACY,EAAA,EAAD,CACEC,KAAK,+BACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,qCAQF,cAACY,EAAA,EAAD,CACEC,KAAK,wCACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,qCCxIFH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,OACPC,YAAa,QAEfC,MAAO,CACLF,MAAO,QAETG,KAAM,CACJ,UAAW,CACTC,eAAgB,SAGpBC,KAAM,CACJC,WAAY,SACZN,MAAO,YA4KIoB,EAxKF,WACX,IAAMZ,EAAUd,IAEhB,OACE,qCACE,oEACA,kEACA,2DACA,cAACe,EAAA,EAAD,CACEC,KAAK,wCACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,uCAQF,cAACY,EAAA,EAAD,CACEC,KAAK,iCACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,2CAQF,eAACkB,EAAA,EAAD,CAAMH,UAAU,aAAhB,UACE,cAACI,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,yEAIF,cAACF,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,6IAGE,eAACH,EAAA,EAAD,CAAMH,UAAU,aAAhB,UACE,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,mEAIF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,iMAMF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,wCAEF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,yMAMF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,oDAEF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,kDAKR,cAACF,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,2KAIE,eAACH,EAAA,EAAD,CAAMH,UAAU,aAAhB,UACE,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,oIAKF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,uEAIF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,gFAIF,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcL,UAAWJ,EAAQN,MAAjC,SACE,mBAAGU,UAAU,kBAEf,cAACM,EAAA,EAAD,qGASV,cAACT,EAAA,EAAD,CACEC,KAAK,6DACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,uDAQF,cAACY,EAAA,EAAD,CACEC,KAAK,4DACLC,OAAO,SACPC,UAAWJ,EAAQL,KAHrB,SAKE,cAACU,EAAA,EAAD,CACEC,QAAQ,WACRd,MAAM,YACNY,UAAWJ,EAAQX,QAHrB,uDC5KR,SAASwB,EAASC,GAAQ,IAChBC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADZ,YACsBJ,EADtB,8BAGvB,OACE,6CACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,IAC3BC,GALN,aAOGF,IAAUC,GACT,cAACM,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAaV,SAavB,SAASW,EAAUT,GACjB,MAAO,CACLI,GAAG,cAAD,OAAgBJ,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAM/B,EAAYC,YAAW,CAC3BwC,KAAM,CACJC,WAAW,uBACXC,SAAU,EACVC,gBAAiB,UACjBtC,MAAO,OACPuC,UAAW,UAEbC,KAAM,CACJF,gBAAiB,WAEnBG,IAAK,CACH,UAAW,CACTC,QAAS,MAKA,SAASC,IACtB,IAAMnC,EAAUd,IADmB,EAGTkD,IAAMC,SAAS,GAHN,mBAG5BrB,EAH4B,KAGrBsB,EAHqB,KASnC,OACE,sBAAKlC,UAAS,eAAUJ,EAAQ2B,MAAhC,UACE,cAACY,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CACEzB,MAAOA,EACP0B,SATa,SAACC,EAAOC,GAC3BN,EAASM,IASHC,aAAW,sBACXvC,QAAQ,YACRF,UAAWJ,EAAQgC,KALrB,UAOE,cAACc,EAAA,EAAD,aAAK1C,UAAWJ,EAAQiC,IAAKc,MAAM,gBAAmBrB,EAAU,KAChE,cAACoB,EAAA,EAAD,aAAK1C,UAAWJ,EAAQiC,IAAKc,MAAM,gBAAmBrB,EAAU,KAChE,cAACoB,EAAA,EAAD,aACE1C,UAAWJ,EAAQiC,IACnBc,MAAM,kBACFrB,EAAU,UAIpB,cAACb,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,SChGR,IAAM/B,EAAYC,YAAW,CAC3B6D,OAAQ,CACNpB,WAAW,uBACXG,UAAW,SACXkB,UAAW,EACXC,aAAc,EACdC,WAAY,GACZC,cAAe,MAQJC,EAJO,WACpB,IAAMrD,EAAUd,IAChB,OAAO,oBAAIkB,UAAWJ,EAAQgD,OAAvB,mC,qECPH9D,EAAYC,YAAW,CAC3BmE,OAAQ,CACNxB,gBAAiB,UAGjByB,MAAO,OACPC,OAAQ,QAEVC,YAAa,CACX3B,gBAAiB,UACjBtC,MAAO,OACP0C,QAAS,KA4CEwB,EAxCO,WACpB,IAAM1D,EAAUd,IADU,EAEAkD,IAAMC,SAAS,IAFf,mBAEnBrB,EAFmB,KAEZsB,EAFY,KAI1B,OACE,eAACqB,EAAA,EAAD,CACE3C,MAAOA,EACP0B,SAAU,SAACC,EAAOC,GAChBN,EAASM,IAEXgB,YAAU,EACVxD,UAAWJ,EAAQsD,OANrB,UAQE,cAACO,EAAA,EAAD,CACEzD,UAAWJ,EAAQyD,YACnBV,MAAM,OACNe,UAAW7D,IACX8D,GAAG,IACH/C,MAAM,GACNgD,KAAM,cAAC,IAAD,MAER,cAACH,EAAA,EAAD,CACEzD,UAAWJ,EAAQyD,YACnBV,MAAM,QACNe,UAAW7D,IACX8D,GAAG,SACH/C,MAAM,QACNgD,KAAM,cAAC,IAAD,MAER,cAACH,EAAA,EAAD,CACEzD,UAAWJ,EAAQyD,YACnBV,MAAM,UACNe,UAAW7D,IACX8D,GAAG,WACH/C,MAAM,UACNgD,KAAM,cAAC,IAAD,UCtDR9E,EAAYC,YAAW,CAC3B8E,MAAO,CACLC,SAAU,SACVf,WAAY,EACZC,cAAe,KA2BJe,EAvBM,WACnB,IAAMnE,EAAUd,IAChB,OACE,eAACqB,EAAA,EAAD,CAAMH,UAAS,qBAAgBJ,EAAQiE,MAAxB,SAAf,UACE,cAACzD,EAAA,EAAD,uNAKA,cAACA,EAAA,EAAD,kPAMA,cAACA,EAAA,EAAD,4H,iECjBAtB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgF,QAAS,CACP5E,MAAO,QAET6E,KAAM,CACJtC,UAAW,UAEbuC,SAAU,CACRpB,aAAc,MACd5D,OAAQF,EAAMG,QAAQ,GACtBgE,MAAO,OAETgB,OAAQ,CACNjF,OAAQF,EAAMG,QAAQ,GACtBgE,MAAO,WAyIIiB,GArIQ,WACrB,IAAMxE,EAAUd,KADW,EAEHmD,mBAAS,IAFN,mBAEpBoC,EAFoB,KAEdC,EAFc,OAGerC,mBAAS,IAHxB,mBAGpBsC,EAHoB,KAGLC,EAHK,OAIDvC,mBAAS,IAJR,mBAIpBwC,EAJoB,KAIbC,EAJa,OAKiBzC,mBAAS,IAL1B,mBAKpB0C,EALoB,KAKJC,EALI,OAMC3C,mBAAS,SANV,mBAMpB4C,EANoB,KAMZC,EANY,OAOK7C,mBAAS,IAPd,mBAOpB8C,EAPoB,KAOVC,EAPU,OAQuB/C,mBAAS,IARhC,mBAQpBgD,EARoB,KAQDC,EARC,KA4D3B,OACE,qBAAKlF,UAAS,eAAUJ,EAAQoE,SAAhC,SACE,uBAAMhE,UAAWJ,EAAQqE,KAAMkB,YAAU,EAACC,aAAa,MAAvD,UACE,8BACE,cAACC,EAAA,EAAD,CACErF,UAAWJ,EAAQuE,OACnBiB,aAAa,eACbzC,MAAM,OACNzC,QAAQ,WACRoF,MAAgC,IAAzBf,EAAcgB,OACrBC,WAAYjB,EACZ3D,MAAOyD,EACP/B,SAAU,SAACmD,GACTnB,EAAQmB,EAAE1F,OAAOa,YAIvB,8BACE,cAACyE,EAAA,EAAD,CACErF,UAAWJ,EAAQuE,OACnBiB,aAAa,eACbzC,MAAM,QACNzC,QAAQ,WACRoF,MAAiC,IAA1BX,EAAeY,OACtBC,WAAYb,EACZ/D,MAAO6D,EACPnC,SAAU,SAACmD,GACTf,EAASe,EAAE1F,OAAOa,YAIxB,8BACE,eAAC8E,EAAA,EAAD,CAAaxF,QAAQ,WAAWF,UAAWJ,EAAQsE,SAAnD,UACE,cAACyB,EAAA,EAAD,CAAY1E,GAAG,SAAf,oBACA,eAAC2E,EAAA,EAAD,CACEC,QAAQ,SACR5E,GAAG,SACHL,MAAOiE,EACPvC,SAAU,SAACmD,GACTX,EAAUW,EAAE1F,OAAOa,QALvB,UAQE,cAACkF,EAAA,EAAD,CAAUlF,MAAO,QAAjB,2BACA,cAACkF,EAAA,EAAD,CAAUlF,MAAO,WAAjB,qCACA,cAACkF,EAAA,EAAD,CAAUlF,MAAO,OAAjB,sCACA,cAACkF,EAAA,EAAD,CAAUlF,MAAO,QAAjB,2BAIN,8BACE,cAACyE,EAAA,EAAD,CACErF,UAAWJ,EAAQuE,OACnBlD,GAAG,WACH0B,MAAM,WACNoD,WAAS,EACTC,KAAM,EACN9F,QAAQ,WACRoF,MAAoC,IAA7BL,EAAkBM,OACzBC,WAAYP,EACZrE,MAAOmE,EACPzC,SAAU,SAACmD,GACTT,EAAYS,EAAE1F,OAAOa,YAI3B,cAACX,EAAA,EAAD,CAAQC,QAAQ,YAAYd,MAAM,UAAU6G,QAnH7B,SAACR,GACpBA,EAAES,iBAIC7B,EAAK8B,MAAM,mBACX1B,EAAM0B,MACL,2HAEDpB,GAuBDqB,KAAMC,KAAK,YAAa,CAEtB5B,QACAJ,OACAQ,SAEAyB,KAAMvB,IAERT,EAAQ,IACRI,EAAS,IACTI,EAAU,SACVE,EAAY,IACZR,EAAiB,IACjBI,EAAkB,IAClBM,EAAqB,MAlChBb,EAAK8B,MAAM,kBAGd3B,EAAiB,IAFjBA,EAAiB,gBAKhBC,EAAM0B,MACL,0HAKFvB,EAAkB,IAFlBA,EAAkB,iBAOlBM,EAHGH,EAGkB,GAFA,2BAwFrB,0BClIOwB,GAdH,kBACV,cAAC,IAAD,CAAeC,SAAS,IAAxB,SACE,sBAAKxG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,CAAOC,MAAO,QAClD,cAAC,IAAD,CAAOF,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,CAAOC,MAAO,aACjD,cAAC,IAAD,CAAOF,KAAK,WAAWC,OAAQ,kBAAM,cAAC,GAAD,CAASC,MAAO,kBAEvD,cAAC,EAAD,UCPSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OAAO,cAAC,GAAD,IAASY,SAASC,eAAe,SAKjDX,O","file":"static/js/main.0a763549.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    margin: theme.spacing(1),\r\n    color: \"#FFF\",\r\n    borderColor: \"#FFF\",\r\n  },\r\n  icons: {\r\n    color: \"#FFF\",\r\n  },\r\n  link: {\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n  bold: {\r\n    fontWeight: \"bolder\",\r\n    color: \"#FFF\",\r\n  },\r\n}));\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <h2>Registration Deadline: December 7th</h2>\r\n      <Link\r\n        href=\"https://www.mvp.sos.ga.gov/MVP/mvp.do\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Check Registration\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        href=\"https://registertovote.sos.ga.gov/GAOLVR/welcometoga.do#no-back-button\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Update Registration\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        href=\"https://registertovote.sos.ga.gov/GAOLVR/welcometoga.do#no-back-button\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Register To Vote\r\n        </Button>\r\n      </Link>\r\n      <List className=\"left-align\">\r\n        <ListItem>\r\n          <ListItemIcon className={classes.icons}>\r\n            <i className=\"fas fa-star\"></i>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            If you are 17 years old and will be{\" \"}\r\n            <span className={classes.bold}>\r\n              18 years old on or before January 5th\r\n            </span>\r\n            , you can register to vote and vote in the upcoming election!\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon className={classes.icons}>\r\n            <i className=\"fas fa-star\"></i>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            Reminder: you must{\" \"}\r\n            <span className={classes.bold}>\r\n              update your registration every time you move\r\n            </span>\r\n            !\r\n          </ListItemText>\r\n        </ListItem>\r\n      </List>\r\n      <List className=\"left-align\">\r\n        <ListItem>\r\n          <ListItemText>\r\n            To register to vote, you must:\r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>be a citizen of the United States;</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>be a legal resident of the county;</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  be at least 17 1/2 years of age to register and 18 years of\r\n                  age to vote;\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  not be serving a sentence for conviction of a felony involving\r\n                  moral turpitude; and\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  have not been found mentally incompetent by a judge.\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText>\r\n            To register to vote in Georgia you should provide one of the\r\n            following:\r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  your Georgia driver's license number;\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>your Georgia ID number; or</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>other government issued photo ID.</ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText>\r\n            If you do not have these IDs, you may provide:\r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  the last four digits of your Social Security Number.\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText>\r\n            If you are registering to vote for the first time by mail, you will\r\n            need to provide proof of residency. Acceptable proof includes:\r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>current and valid photo ID;</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  utility bill, bank statement, government check, or paycheck\r\n                  that shows your current name and address; or\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  government issued document that shows your current name and\r\n                  address.\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    margin: theme.spacing(1),\r\n    color: \"#FFF\",\r\n    borderColor: \"#FFF\",\r\n  },\r\n  icons: {\r\n    color: \"#FFF\",\r\n  },\r\n  link: {\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n  bold: {\r\n    fontWeight: \"bolder\",\r\n    color: \"#FFF\",\r\n  },\r\n}));\r\n\r\nconst Absentee = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        Request Absentee Ballot: <span className={classes.bold}>NOW</span>\r\n      </h2>\r\n      <h2>First Day Absentee Ballots are Mailed by Regsitrar: November 18th</h2>\r\n      <h2>Absentee Ballot Applications Must Be Submitted By: January 1st</h2>\r\n      <h2>Absentee Ballots Must be Received By: January 5th</h2>\r\n      <Link\r\n        href=\"https://ballotrequest.sos.ga.gov/\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Request An Absentee Ballot\r\n        </Button>\r\n      </Link>\r\n      <List className=\"left-align\">\r\n        <ListItem>\r\n          <ListItemIcon className={classes.icons}>\r\n            <i className=\"fas fa-star\"></i>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <span className={classes.bold}>\r\n              Any voter registered in Georgia can vote absentee by mail.\r\n            </span>{\" \"}\r\n            Complete the application as soon as possible and mail, fax, email\r\n            (as an attachment), or drop the application off at your county\r\n            registrar’s office.\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon className={classes.icons}>\r\n            <i className=\"fas fa-star\"></i>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <span className={classes.bold}>\r\n              You must file a separate application for each election for which\r\n              you are requesting an absentee ballot\r\n            </span>{\" \"}\r\n            unless you are over 65, with disability, or are a military or\r\n            overseas citizen.\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon className={classes.icons}>\r\n            <i className=\"fas fa-star\"></i>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            Absentee ballots may be requested any time between 180 days prior to\r\n            the election and the end of the business day on the Friday before\r\n            Election Day.\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon className={classes.icons}>\r\n            <i className=\"fas fa-star\"></i>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            Absentee ballots can be delivered either by U.S. first class mail or\r\n            hand delivered by the voter to their county registrar’s office. If\r\n            mailing, you must affix postage to the ballot envelope.\r\n          </ListItemText>\r\n        </ListItem>\r\n      </List>\r\n      <Link\r\n        href=\"https://sos.ga.gov/admin/uploads/Absentee_Voting_Guide_20142.pdf\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Georgia Absentee Voting Guide\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        href=\"https://elections.sos.ga.gov/Elections/countyregistrars.do\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Find County Board of Registrars Offices\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        href=\"https://gaballotdropbox.org/\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Find Ballot Dropboxes\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        href=\"https://www.mvp.sos.ga.gov/MVP/mvp.do\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Track Your Ballot\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Absentee;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    margin: theme.spacing(1),\r\n    color: \"#FFF\",\r\n    borderColor: \"#FFF\",\r\n  },\r\n  icons: {\r\n    color: \"#FFF\",\r\n  },\r\n  link: {\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n  bold: {\r\n    fontWeight: \"bolder\",\r\n    color: \"#FFF\",\r\n  },\r\n}));\r\n\r\nconst Vote = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <h2>Early Voting Begins: December 14th</h2>\r\n      <h2>Early Voting Ends: December 31st</h2>\r\n      <h2>Election Day: January 5th</h2>\r\n      <Link\r\n        href=\"https://www.mvp.sos.ga.gov/MVP/mvp.do\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Find Your Polling Place\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        href=\"https://www.ridetothepoll.com/\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Get A Ride To Polling Place\r\n        </Button>\r\n      </Link>\r\n      <List className=\"left-align\">\r\n        <ListItem>\r\n          <ListItemText>\r\n            Polling places are open from 7am to 7pm on Election Day.\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText>\r\n            Georgia election law requires voters to show one of the following\r\n            six forms of photo identification in order to vote in person:\r\n            <List className=\"left-align\">\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  a Georgia driver’s license, even if expired;\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  any valid state or federal government-issued photo ID,\r\n                  including a FREE Voter ID card issued by your county\r\n                  registrar’s office or the Department of Driver Services (DDS);\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>a valid U.S. passport;</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  a valid employee photo ID from any branch, department, agency,\r\n                  or entity of the U.S. Government, Georgia, or any county,\r\n                  municipality, board, authority, or other entity of this state;\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>a valid U.S. military photo ID; or</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>a valid tribal photo ID.</ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText>\r\n            To obtain a FREE Voter Identification Card, you must provide all of\r\n            the following any county registrar’s office or Department of Driver\r\n            Services office:\r\n            <List className=\"left-align\">\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  a photo identity document or approved non-photo identity\r\n                  document that includes full legal name and date of birth;\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  documentation showing the voter’s date of birth;\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  evidence that the applicant is a registered Georgia voter; and\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon className={classes.icons}>\r\n                  <i className=\"fas fa-star\"></i>\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  documentation showing the applicant’s name and residential\r\n                  address.\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </List>\r\n      <Link\r\n        href=\"https://elections.sos.ga.gov/Elections/countyregistrars.do\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Find County Board of Registrars Offices\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        href=\"https://dds.georgia.gov/locations/customer-service-center\"\r\n        target=\"_blank\"\r\n        className={classes.link}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={classes.buttons}\r\n        >\r\n          Find Departments of Driver Services\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Vote;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Register from \"./Register\";\r\nimport Absentee from \"./Absentee\";\r\nimport Vote from \"./Vote\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    fontFamily: `'Oxygen', sans-serif`,\r\n    flexGrow: 1,\r\n    backgroundColor: \"#3C3B6E\",\r\n    color: \"#EEE\",\r\n    textAlign: \"center\",\r\n  },\r\n  tabs: {\r\n    backgroundColor: \"#B22234\",\r\n  },\r\n  tab: {\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={`main ${classes.root}`}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n          variant=\"fullWidth\"\r\n          className={classes.tabs}\r\n        >\r\n          <Tab className={classes.tab} label=\"Registration\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Vote By Mail\" {...a11yProps(1)} />\r\n          <Tab\r\n            className={classes.tab}\r\n            label=\"Vote In Person\"\r\n            {...a11yProps(2)}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Register />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Absentee />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Vote />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    fontFamily: `'Oxygen', sans-serif`,\r\n    textAlign: \"center\",\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n  },\r\n});\r\n\r\nexport const Header = () => {\r\n  const classes = useStyles();\r\n  return <h1 className={classes.header}>How To Vote Georgia </h1>;\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  footer: {\r\n    backgroundColor: \"#3C3B6E\",\r\n    // position: \"fixed\",\r\n    // bottom: 0,\r\n    width: \"100%\",\r\n    height: \"50px\",\r\n  },\r\n  footerColor: {\r\n    backgroundColor: \"#3C3B6E\",\r\n    color: \"#FFF\",\r\n    opacity: 1,\r\n  },\r\n});\r\n\r\nexport const Footer = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.footer}\r\n    >\r\n      <BottomNavigationAction\r\n        className={classes.footerColor}\r\n        label=\"Home\"\r\n        component={Link}\r\n        to=\"/\"\r\n        value=\"\"\r\n        icon={<HomeIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        className={classes.footerColor}\r\n        label=\"About\"\r\n        component={Link}\r\n        to=\"/about\"\r\n        value=\"about\"\r\n        icon={<InfoIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        className={classes.footerColor}\r\n        label=\"Contact\"\r\n        component={Link}\r\n        to=\"/contact\"\r\n        value=\"contact\"\r\n        icon={<ContactSupportIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst useStyles = makeStyles({\r\n  about: {\r\n    fontSize: \"1.15em\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n});\r\n\r\nexport const About = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List className={`left-align ${classes.about} main`}>\r\n      <ListItem>\r\n        HowToVoteGeorgia.com was born out of a desire to help those eligible and\r\n        eager to vote in the State of Georgia runoffs on January 5th, have the\r\n        pertinent and up-to-date information they need to do so.\r\n      </ListItem>\r\n      <ListItem>\r\n        Designed and developed by a poll worker from North Carolina, this\r\n        non-partisan, independent website aims to help voters get clear, concise\r\n        and up-to-date information on how to register to vote, where to vote\r\n        and/or how to vote.\r\n      </ListItem>\r\n      <ListItem>\r\n        The website will be updated as needed with any additional information\r\n        for voters in the state of Georgia.\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contact: {\r\n    color: \"#EEE\",\r\n  },\r\n  form: {\r\n    textAlign: \"center\",\r\n  },\r\n  dropdown: {\r\n    marginBottom: \"8px\",\r\n    margin: theme.spacing(1),\r\n    width: \"80%\",\r\n  },\r\n  inputs: {\r\n    margin: theme.spacing(1),\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nexport const Contact = () => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [nameErrorText, setNameErrorText] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\r\n  const [reason, setReason] = useState(\"OTHER\");\r\n  const [comments, setComments] = useState(\"\");\r\n  const [commentsErrorText, setCommentsErrorText] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //destructure from inputs\r\n    //do error checking\r\n    if (\r\n      !name.match(/^[a-z ,.'-]+$/i) ||\r\n      !email.match(\r\n        /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n      ) ||\r\n      !comments\r\n    ) {\r\n      //set error text\r\n      if (!name.match(/^[a-z ,.'-]+$/i)) {\r\n        setNameErrorText(\"Invalid name\");\r\n      } else {\r\n        setNameErrorText(\"\");\r\n      }\r\n      if (\r\n        !email.match(\r\n          /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n        )\r\n      ) {\r\n        setEmailErrorText(\"Invalid email\");\r\n      } else {\r\n        setEmailErrorText(\"\");\r\n      }\r\n      if (!comments) {\r\n        setCommentsErrorText(\"Comments are required\");\r\n      } else {\r\n        setCommentsErrorText(\"\");\r\n      }\r\n    } else {\r\n      axios.post(\"/sendtome\", {\r\n        //make an object to be handled from req.body on the backend.\r\n        email,\r\n        name,\r\n        reason,\r\n        //change the name to represent text on the backend.\r\n        text: comments,\r\n      });\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n      setReason(\"OTHER\");\r\n      setComments(\"\");\r\n      setNameErrorText(\"\");\r\n      setEmailErrorText(\"\");\r\n      setCommentsErrorText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`main ${classes.contact}`}>\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n        <div>\r\n          <TextField\r\n            className={classes.inputs}\r\n            autoComplete=\"new-password\"\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            error={nameErrorText.length === 0 ? false : true}\r\n            helperText={nameErrorText}\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.inputs}\r\n            autoComplete=\"new-password\"\r\n            label=\"email\"\r\n            variant=\"outlined\"\r\n            error={emailErrorText.length === 0 ? false : true}\r\n            helperText={emailErrorText}\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <FormControl variant=\"outlined\" className={classes.dropdown}>\r\n            <InputLabel id=\"reason\">Reason</InputLabel>\r\n            <Select\r\n              labelId=\"reason\"\r\n              id=\"reason\"\r\n              value={reason}\r\n              onChange={(e) => {\r\n                setReason(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value={\"ERROR\"}>Error On Page</MenuItem>\r\n              <MenuItem value={\"QUESTION\"}>I Still Have a Question</MenuItem>\r\n              <MenuItem value={\"HELP\"}>I Still Need Help Voting</MenuItem>\r\n              <MenuItem value={\"OTHER\"}>Other</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className={classes.inputs}\r\n            id=\"comments\"\r\n            label=\"Comments\"\r\n            multiline\r\n            rows={8}\r\n            variant=\"outlined\"\r\n            error={commentsErrorText.length === 0 ? false : true}\r\n            helperText={commentsErrorText}\r\n            value={comments}\r\n            onChange={(e) => {\r\n              setComments(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Steps from \"./components/Steps\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\n\nconst App = () => (\n  <BrowserRouter basename=\"/\">\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" render={() => <Steps title={\"\"} />} />\n        <Route path=\"/about\" render={() => <About title={\"About\"} />} />\n        <Route path=\"/contact\" render={() => <Contact title={\"Contact\"} />} />\n      </Switch>\n      <Footer />\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}